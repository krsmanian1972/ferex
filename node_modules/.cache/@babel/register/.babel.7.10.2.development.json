{
  "{\"sourceRoot\":\"/Users/harinimaniam/workspace/ferex/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/harinimaniam/workspace/ferex\",\"filename\":\"/Users/harinimaniam/workspace/ferex/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/harinimaniam/workspace/ferex\",\"plugins\":[],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/harinimaniam/workspace/ferex",
      "filename": "/Users/harinimaniam/workspace/ferex/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/harinimaniam/workspace/ferex",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/harinimaniam/workspace/ferex/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/harinimaniam/workspace/ferex/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "console.log(\"Hello Harini, Eppidi Erruka\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSw2QkFBWiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaGFyaW5pbWFuaWFtL3dvcmtzcGFjZS9mZXJleC9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc29sZS5sb2coXCJIZWxsbyBIYXJpbmksIEVwcGlkaSBFcnJ1a2FcIik7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "console",
        "log"
      ],
      "mappings": "AAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ",
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
      "sourcesContent": [
        "console.log(\"Hello Harini, Eppidi Erruka\");"
      ]
    },
    "sourceType": "module",
    "mtime": 1591073858851
  },
  "{\"sourceRoot\":\"/Users/harinimaniam/workspace/ferex/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/harinimaniam/workspace/ferex\",\"filename\":\"/Users/harinimaniam/workspace/ferex/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/harinimaniam/workspace/ferex\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/harinimaniam/workspace/ferex",
      "filename": "/Users/harinimaniam/workspace/ferex/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/harinimaniam/workspace/ferex",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/harinimaniam/workspace/ferex/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/harinimaniam/workspace/ferex/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar express = require('express');\n\nvar https = require('http');\n\nvar cors = require('cors');\n\nvar signalServer = require('./signalServer');\n\nvar bind_port = process.env.port;\nvar app = express();\napp.use(cors());\napp.get(\"/\", function (req, res) {\n  res.send(\"This is a signalling server for Ferri-UI.\");\n});\nvar server = https.createServer(app);\nserver.listen(bind_port, function () {\n  signalServer(server);\n  console.log('App is started and listening at ' + bind_port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiaHR0cHMiLCJjb3JzIiwic2lnbmFsU2VydmVyIiwiYmluZF9wb3J0IiwicHJvY2VzcyIsImVudiIsInBvcnQiLCJhcHAiLCJ1c2UiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwic2VydmVyIiwiY3JlYXRlU2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBckI7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRyxZQUFZLEdBQUdILE9BQU8sQ0FBQyxnQkFBRCxDQUE1Qjs7QUFFQSxJQUFNSSxTQUFTLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUE5QjtBQUNBLElBQU1DLEdBQUcsR0FBR1QsT0FBTyxFQUFuQjtBQUNBUyxHQUFHLENBQUNDLEdBQUosQ0FBUVAsSUFBSSxFQUFaO0FBRUFNLEdBQUcsQ0FBQ0UsR0FBSixDQUFRLEdBQVIsRUFBWSxVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBYTtBQUN4QkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsMkNBQVQ7QUFDQSxDQUZEO0FBS0EsSUFBTUMsTUFBTSxHQUFHYixLQUFLLENBQUNjLFlBQU4sQ0FBbUJQLEdBQW5CLENBQWY7QUFFQU0sTUFBTSxDQUFDRSxNQUFQLENBQWNaLFNBQWQsRUFBeUIsWUFBSTtBQUM1QkQsRUFBQUEsWUFBWSxDQUFDVyxNQUFELENBQVo7QUFDQUcsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkscUNBQW1DZCxTQUEvQztBQUNBLENBSEQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hhcmluaW1hbmlhbS93b3Jrc3BhY2UvZmVyZXgvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnZG90ZW52L2NvbmZpZyc7XG5cbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBodHRwcyA9IHJlcXVpcmUoJ2h0dHAnKTtcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJyk7XG5jb25zdCBzaWduYWxTZXJ2ZXIgPSByZXF1aXJlKCcuL3NpZ25hbFNlcnZlcicpOyBcblxuY29uc3QgYmluZF9wb3J0ID0gcHJvY2Vzcy5lbnYucG9ydDtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmFwcC51c2UoY29ycygpKTtcblxuYXBwLmdldChcIi9cIiwocmVxLHJlcykgPT4ge1xuXHRyZXMuc2VuZChcIlRoaXMgaXMgYSBzaWduYWxsaW5nIHNlcnZlciBmb3IgRmVycmktVUkuXCIpO1xufSk7XG5cblxuY29uc3Qgc2VydmVyID0gaHR0cHMuY3JlYXRlU2VydmVyKGFwcCk7XG5cbnNlcnZlci5saXN0ZW4oYmluZF9wb3J0LCAoKT0+e1xuXHRzaWduYWxTZXJ2ZXIoc2VydmVyKTtcblx0Y29uc29sZS5sb2coJ0FwcCBpcyBzdGFydGVkIGFuZCBsaXN0ZW5pbmcgYXQgJytiaW5kX3BvcnQpO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "https",
        "cors",
        "signalServer",
        "bind_port",
        "process",
        "env",
        "port",
        "app",
        "use",
        "get",
        "req",
        "res",
        "send",
        "server",
        "createServer",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,MAAD,CAArB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,gBAAD,CAA5B;;AAEA,IAAMI,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAA9B;AACA,IAAMC,GAAG,GAAGT,OAAO,EAAnB;AACAS,GAAG,CAACC,GAAJ,CAAQP,IAAI,EAAZ;AAEAM,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAY,UAACC,GAAD,EAAKC,GAAL,EAAa;AACxBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,2CAAT;AACA,CAFD;AAKA,IAAMC,MAAM,GAAGb,KAAK,CAACc,YAAN,CAAmBP,GAAnB,CAAf;AAEAM,MAAM,CAACE,MAAP,CAAcZ,SAAd,EAAyB,YAAI;AAC5BD,EAAAA,YAAY,CAACW,MAAD,CAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAmCd,SAA/C;AACA,CAHD",
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
      "sourcesContent": [
        "import 'dotenv/config';\n\nconst express = require('express');\nconst https = require('http');\nconst cors = require('cors');\nconst signalServer = require('./signalServer'); \n\nconst bind_port = process.env.port;\nconst app = express();\napp.use(cors());\n\napp.get(\"/\",(req,res) => {\n\tres.send(\"This is a signalling server for Ferri-UI.\");\n});\n\n\nconst server = https.createServer(app);\n\nserver.listen(bind_port, ()=>{\n\tsignalServer(server);\n\tconsole.log('App is started and listening at '+bind_port);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1591188056458
  },
  "{\"sourceRoot\":\"/Users/harinimaniam/workspace/ferex/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/harinimaniam/workspace/ferex\",\"filename\":\"/Users/harinimaniam/workspace/ferex/src/SignalServer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/harinimaniam/workspace/ferex\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/harinimaniam/workspace/ferex",
      "filename": "/Users/harinimaniam/workspace/ferex/src/SignalServer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/harinimaniam/workspace/ferex",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/harinimaniam/workspace/ferex/src/SignalServer.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/harinimaniam/workspace/ferex/src/SignalServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
        "sourceFileName": "SignalServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar io = require('socket.io');\n\nvar users = require('./lib/users');\n/**\n * Initialize when a connection is made\n * @param {SocketIO.Socket} socket\n */\n\n\nfunction initSocket(socket) {\n  var id;\n  socket.on('init', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return users.create(socket);\n\n          case 2:\n            id = _context.sent;\n            socket.emit('init', {\n              id: id\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))).on('request', function (data) {\n    var receiver = users.get(data.to);\n\n    if (receiver) {\n      receiver.emit('request', {\n        from: id\n      });\n    }\n  }).on('call', function (data) {\n    var receiver = users.get(data.to);\n\n    if (receiver) {\n      receiver.emit('call', _objectSpread(_objectSpread({}, data), {}, {\n        from: id\n      }));\n    } else {\n      socket.emit('failed');\n    }\n  }).on('end', function (data) {\n    var receiver = users.get(data.to);\n\n    if (receiver) {\n      receiver.emit('end');\n    }\n  }).on('disconnect', function () {\n    users.remove(id);\n    console.log(id, 'disconnected');\n  });\n}\n\nmodule.exports = function (server) {\n  io({\n    path: '/bridge',\n    serveClient: false\n  }).listen(server, {\n    log: true\n  }).on('connection', initSocket);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNpZ25hbFNlcnZlci5qcyJdLCJuYW1lcyI6WyJpbyIsInJlcXVpcmUiLCJ1c2VycyIsImluaXRTb2NrZXQiLCJzb2NrZXQiLCJpZCIsIm9uIiwiY3JlYXRlIiwiZW1pdCIsImRhdGEiLCJyZWNlaXZlciIsImdldCIsInRvIiwiZnJvbSIsInJlbW92ZSIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIiwic2VydmVyIiwicGF0aCIsInNlcnZlQ2xpZW50IiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQWxCOztBQUNBLElBQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBckI7QUFFQTs7Ozs7O0FBSUEsU0FBU0UsVUFBVCxDQUFvQkMsTUFBcEIsRUFBNEI7QUFDMUIsTUFBSUMsRUFBSjtBQUNBRCxFQUFBQSxNQUFNLENBQ0hFLEVBREgsQ0FDTSxNQUROLHVFQUNjO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNDSixLQUFLLENBQUNLLE1BQU4sQ0FBYUgsTUFBYixDQUREOztBQUFBO0FBQ1ZDLFlBQUFBLEVBRFU7QUFFVkQsWUFBQUEsTUFBTSxDQUFDSSxJQUFQLENBQVksTUFBWixFQUFvQjtBQUFFSCxjQUFBQSxFQUFFLEVBQUZBO0FBQUYsYUFBcEI7O0FBRlU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FEZCxJQUtHQyxFQUxILENBS00sU0FMTixFQUtpQixVQUFDRyxJQUFELEVBQVU7QUFDdkIsUUFBTUMsUUFBUSxHQUFHUixLQUFLLENBQUNTLEdBQU4sQ0FBVUYsSUFBSSxDQUFDRyxFQUFmLENBQWpCOztBQUNBLFFBQUlGLFFBQUosRUFBYztBQUNaQSxNQUFBQSxRQUFRLENBQUNGLElBQVQsQ0FBYyxTQUFkLEVBQXlCO0FBQUVLLFFBQUFBLElBQUksRUFBRVI7QUFBUixPQUF6QjtBQUNEO0FBQ0YsR0FWSCxFQVdHQyxFQVhILENBV00sTUFYTixFQVdjLFVBQUNHLElBQUQsRUFBVTtBQUNwQixRQUFNQyxRQUFRLEdBQUdSLEtBQUssQ0FBQ1MsR0FBTixDQUFVRixJQUFJLENBQUNHLEVBQWYsQ0FBakI7O0FBQ0EsUUFBSUYsUUFBSixFQUFjO0FBQ1pBLE1BQUFBLFFBQVEsQ0FBQ0YsSUFBVCxDQUFjLE1BQWQsa0NBQTJCQyxJQUEzQjtBQUFpQ0ksUUFBQUEsSUFBSSxFQUFFUjtBQUF2QztBQUNELEtBRkQsTUFFTztBQUNMRCxNQUFBQSxNQUFNLENBQUNJLElBQVAsQ0FBWSxRQUFaO0FBQ0Q7QUFDRixHQWxCSCxFQW1CR0YsRUFuQkgsQ0FtQk0sS0FuQk4sRUFtQmEsVUFBQ0csSUFBRCxFQUFVO0FBQ25CLFFBQU1DLFFBQVEsR0FBR1IsS0FBSyxDQUFDUyxHQUFOLENBQVVGLElBQUksQ0FBQ0csRUFBZixDQUFqQjs7QUFDQSxRQUFJRixRQUFKLEVBQWM7QUFDWkEsTUFBQUEsUUFBUSxDQUFDRixJQUFULENBQWMsS0FBZDtBQUNEO0FBQ0YsR0F4QkgsRUF5QkdGLEVBekJILENBeUJNLFlBekJOLEVBeUJvQixZQUFNO0FBQ3RCSixJQUFBQSxLQUFLLENBQUNZLE1BQU4sQ0FBYVQsRUFBYjtBQUNBVSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVgsRUFBWixFQUFnQixjQUFoQjtBQUNELEdBNUJIO0FBNkJEOztBQUVEWSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsTUFBRCxFQUFZO0FBQzNCbkIsRUFBQUEsRUFBRSxDQUFDO0FBQUVvQixJQUFBQSxJQUFJLEVBQUUsU0FBUjtBQUFtQkMsSUFBQUEsV0FBVyxFQUFFO0FBQWhDLEdBQUQsQ0FBRixDQUNHQyxNQURILENBQ1VILE1BRFYsRUFDa0I7QUFBRUgsSUFBQUEsR0FBRyxFQUFFO0FBQVAsR0FEbEIsRUFFR1YsRUFGSCxDQUVNLFlBRk4sRUFFb0JILFVBRnBCO0FBR0QsQ0FKRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaGFyaW5pbWFuaWFtL3dvcmtzcGFjZS9mZXJleC9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaW8gPSByZXF1aXJlKCdzb2NrZXQuaW8nKTtcbmNvbnN0IHVzZXJzID0gcmVxdWlyZSgnLi9saWIvdXNlcnMnKTtcblxuLyoqXG4gKiBJbml0aWFsaXplIHdoZW4gYSBjb25uZWN0aW9uIGlzIG1hZGVcbiAqIEBwYXJhbSB7U29ja2V0SU8uU29ja2V0fSBzb2NrZXRcbiAqL1xuZnVuY3Rpb24gaW5pdFNvY2tldChzb2NrZXQpIHtcbiAgbGV0IGlkO1xuICBzb2NrZXRcbiAgICAub24oJ2luaXQnLCBhc3luYyAoKSA9PiB7XG4gICAgICBpZCA9IGF3YWl0IHVzZXJzLmNyZWF0ZShzb2NrZXQpO1xuICAgICAgc29ja2V0LmVtaXQoJ2luaXQnLCB7IGlkIH0pO1xuICAgIH0pXG4gICAgLm9uKCdyZXF1ZXN0JywgKGRhdGEpID0+IHtcbiAgICAgIGNvbnN0IHJlY2VpdmVyID0gdXNlcnMuZ2V0KGRhdGEudG8pO1xuICAgICAgaWYgKHJlY2VpdmVyKSB7XG4gICAgICAgIHJlY2VpdmVyLmVtaXQoJ3JlcXVlc3QnLCB7IGZyb206IGlkIH0pO1xuICAgICAgfVxuICAgIH0pXG4gICAgLm9uKCdjYWxsJywgKGRhdGEpID0+IHtcbiAgICAgIGNvbnN0IHJlY2VpdmVyID0gdXNlcnMuZ2V0KGRhdGEudG8pO1xuICAgICAgaWYgKHJlY2VpdmVyKSB7XG4gICAgICAgIHJlY2VpdmVyLmVtaXQoJ2NhbGwnLCB7IC4uLmRhdGEsIGZyb206IGlkIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc29ja2V0LmVtaXQoJ2ZhaWxlZCcpO1xuICAgICAgfVxuICAgIH0pXG4gICAgLm9uKCdlbmQnLCAoZGF0YSkgPT4ge1xuICAgICAgY29uc3QgcmVjZWl2ZXIgPSB1c2Vycy5nZXQoZGF0YS50byk7XG4gICAgICBpZiAocmVjZWl2ZXIpIHtcbiAgICAgICAgcmVjZWl2ZXIuZW1pdCgnZW5kJyk7XG4gICAgICB9XG4gICAgfSlcbiAgICAub24oJ2Rpc2Nvbm5lY3QnLCAoKSA9PiB7XG4gICAgICB1c2Vycy5yZW1vdmUoaWQpO1xuICAgICAgY29uc29sZS5sb2coaWQsICdkaXNjb25uZWN0ZWQnKTtcbiAgICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSAoc2VydmVyKSA9PiB7XG4gIGlvKHsgcGF0aDogJy9icmlkZ2UnLCBzZXJ2ZUNsaWVudDogZmFsc2UgfSlcbiAgICAubGlzdGVuKHNlcnZlciwgeyBsb2c6IHRydWUgfSlcbiAgICAub24oJ2Nvbm5lY3Rpb24nLCBpbml0U29ja2V0KTtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "SignalServer.js"
      ],
      "names": [
        "io",
        "require",
        "users",
        "initSocket",
        "socket",
        "id",
        "on",
        "create",
        "emit",
        "data",
        "receiver",
        "get",
        "to",
        "from",
        "remove",
        "console",
        "log",
        "module",
        "exports",
        "server",
        "path",
        "serveClient",
        "listen"
      ],
      "mappings": ";;;;;;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAArB;AAEA;;;;;;AAIA,SAASE,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,MAAIC,EAAJ;AACAD,EAAAA,MAAM,CACHE,EADH,CACM,MADN,uEACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCJ,KAAK,CAACK,MAAN,CAAaH,MAAb,CADD;;AAAA;AACVC,YAAAA,EADU;AAEVD,YAAAA,MAAM,CAACI,IAAP,CAAY,MAAZ,EAAoB;AAAEH,cAAAA,EAAE,EAAFA;AAAF,aAApB;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADd,IAKGC,EALH,CAKM,SALN,EAKiB,UAACG,IAAD,EAAU;AACvB,QAAMC,QAAQ,GAAGR,KAAK,CAACS,GAAN,CAAUF,IAAI,CAACG,EAAf,CAAjB;;AACA,QAAIF,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACF,IAAT,CAAc,SAAd,EAAyB;AAAEK,QAAAA,IAAI,EAAER;AAAR,OAAzB;AACD;AACF,GAVH,EAWGC,EAXH,CAWM,MAXN,EAWc,UAACG,IAAD,EAAU;AACpB,QAAMC,QAAQ,GAAGR,KAAK,CAACS,GAAN,CAAUF,IAAI,CAACG,EAAf,CAAjB;;AACA,QAAIF,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACF,IAAT,CAAc,MAAd,kCAA2BC,IAA3B;AAAiCI,QAAAA,IAAI,EAAER;AAAvC;AACD,KAFD,MAEO;AACLD,MAAAA,MAAM,CAACI,IAAP,CAAY,QAAZ;AACD;AACF,GAlBH,EAmBGF,EAnBH,CAmBM,KAnBN,EAmBa,UAACG,IAAD,EAAU;AACnB,QAAMC,QAAQ,GAAGR,KAAK,CAACS,GAAN,CAAUF,IAAI,CAACG,EAAf,CAAjB;;AACA,QAAIF,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACF,IAAT,CAAc,KAAd;AACD;AACF,GAxBH,EAyBGF,EAzBH,CAyBM,YAzBN,EAyBoB,YAAM;AACtBJ,IAAAA,KAAK,CAACY,MAAN,CAAaT,EAAb;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYX,EAAZ,EAAgB,cAAhB;AACD,GA5BH;AA6BD;;AAEDY,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAAY;AAC3BnB,EAAAA,EAAE,CAAC;AAAEoB,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,WAAW,EAAE;AAAhC,GAAD,CAAF,CACGC,MADH,CACUH,MADV,EACkB;AAAEH,IAAAA,GAAG,EAAE;AAAP,GADlB,EAEGV,EAFH,CAEM,YAFN,EAEoBH,UAFpB;AAGD,CAJD",
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
      "sourcesContent": [
        "const io = require('socket.io');\nconst users = require('./lib/users');\n\n/**\n * Initialize when a connection is made\n * @param {SocketIO.Socket} socket\n */\nfunction initSocket(socket) {\n  let id;\n  socket\n    .on('init', async () => {\n      id = await users.create(socket);\n      socket.emit('init', { id });\n    })\n    .on('request', (data) => {\n      const receiver = users.get(data.to);\n      if (receiver) {\n        receiver.emit('request', { from: id });\n      }\n    })\n    .on('call', (data) => {\n      const receiver = users.get(data.to);\n      if (receiver) {\n        receiver.emit('call', { ...data, from: id });\n      } else {\n        socket.emit('failed');\n      }\n    })\n    .on('end', (data) => {\n      const receiver = users.get(data.to);\n      if (receiver) {\n        receiver.emit('end');\n      }\n    })\n    .on('disconnect', () => {\n      users.remove(id);\n      console.log(id, 'disconnected');\n    });\n}\n\nmodule.exports = (server) => {\n  io({ path: '/bridge', serveClient: false })\n    .listen(server, { log: true })\n    .on('connection', initSocket);\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1591163998921
  },
  "{\"sourceRoot\":\"/Users/harinimaniam/workspace/ferex/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/harinimaniam/workspace/ferex\",\"filename\":\"/Users/harinimaniam/workspace/ferex/src/enums.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/harinimaniam/workspace/ferex\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/harinimaniam/workspace/ferex",
      "filename": "/Users/harinimaniam/workspace/ferex/src/enums.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/harinimaniam/workspace/ferex",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/harinimaniam/workspace/ferex/src/enums.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/harinimaniam/workspace/ferex/src/enums.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
        "sourceFileName": "enums.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports.Errors = {};\nmodule.exports.Constants = {\n  PORT: 3001,\n  NEW_USER: 'NEW USER',\n  TYPE_CHANNEL: 'ROOM',\n  TYPE_CONNECTION: 'CONNECTION'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudW1zLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJFcnJvcnMiLCJDb25zdGFudHMiLCJQT1JUIiwiTkVXX1VTRVIiLCJUWVBFX0NIQU5ORUwiLCJUWVBFX0NPTk5FQ1RJT04iXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxNQUFmLEdBQXdCLEVBQXhCO0FBSUFGLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlRSxTQUFmLEdBQTJCO0FBQ3pCQyxFQUFBQSxJQUFJLEVBQUUsSUFEbUI7QUFFekJDLEVBQUFBLFFBQVEsRUFBRSxVQUZlO0FBR3pCQyxFQUFBQSxZQUFZLEVBQUUsTUFIVztBQUl6QkMsRUFBQUEsZUFBZSxFQUFFO0FBSlEsQ0FBM0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hhcmluaW1hbmlhbS93b3Jrc3BhY2UvZmVyZXgvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzLkVycm9ycyA9IHtcblxufTtcblxubW9kdWxlLmV4cG9ydHMuQ29uc3RhbnRzID0ge1xuICBQT1JUOiAzMDAxLFxuICBORVdfVVNFUjogJ05FVyBVU0VSJyxcbiAgVFlQRV9DSEFOTkVMOiAnUk9PTScsXG4gIFRZUEVfQ09OTkVDVElPTjogJ0NPTk5FQ1RJT04nLFxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "enums.js"
      ],
      "names": [
        "module",
        "exports",
        "Errors",
        "Constants",
        "PORT",
        "NEW_USER",
        "TYPE_CHANNEL",
        "TYPE_CONNECTION"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwB,EAAxB;AAIAF,MAAM,CAACC,OAAP,CAAeE,SAAf,GAA2B;AACzBC,EAAAA,IAAI,EAAE,IADmB;AAEzBC,EAAAA,QAAQ,EAAE,UAFe;AAGzBC,EAAAA,YAAY,EAAE,MAHW;AAIzBC,EAAAA,eAAe,EAAE;AAJQ,CAA3B",
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
      "sourcesContent": [
        "module.exports.Errors = {\n\n};\n\nmodule.exports.Constants = {\n  PORT: 3001,\n  NEW_USER: 'NEW USER',\n  TYPE_CHANNEL: 'ROOM',\n  TYPE_CONNECTION: 'CONNECTION',\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1591100506603
  },
  "{\"sourceRoot\":\"/Users/harinimaniam/workspace/ferex/src/lib/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/harinimaniam/workspace/ferex\",\"filename\":\"/Users/harinimaniam/workspace/ferex/src/lib/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/harinimaniam/workspace/ferex\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/lib/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/harinimaniam/workspace/ferex",
      "filename": "/Users/harinimaniam/workspace/ferex/src/lib/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/harinimaniam/workspace/ferex",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/harinimaniam/workspace/ferex/src/lib/users.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/harinimaniam/workspace/ferex/src/lib/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/lib/",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * id => For Socket . A SRU id, generated by this system.\n * \n * fuzzyId => For User. A SRU id, generated by external system.\n *  \n */\nvar OK = 'ok';\nvar NO = 'no'; // The holder for id and the socket.\n\nvar connections = {}; // fuzzyId as Key and its Set of random ids \n\nvar tokens = new Map();\n/**\n * There is no guarantee that every socket will have unique ids\n * Hence we tag the sockets with a unique id.\n * \n * Besides, we need a mechanism to remember the name of the user\n * this fuzzyId belongs for any labeling\n *  \n * @param {*} fuzzyId \n */\n\nfunction randomID(fuzzyId, name) {\n  var segment = new Date().getTime();\n  var uniqueId = Math.random().toString(36).substr(2, 16);\n  return fuzzyId + '~' + name + '~' + segment + '~' + uniqueId;\n}\n/**\n * We create a \"secure random id\" for the given fuzzyId, because\n * we expect more than one connection for the same fuzzyId during a\n * multi-device setup.\n * \n * We will then maintain another map to preserve the ids created for\n * such fuzzy ids. - tokens\n * \n * Every entry of a token is Set for easier removal and uniqueness\n *  \n */\n\n\nexports.create = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(socket, data) {\n    var fuzzyId, name, id;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fuzzyId = data.fuzzyId;\n            name = data.name;\n            id = randomID(fuzzyId, name);\n\n            if (!tokens.has(fuzzyId)) {\n              tokens.set(fuzzyId, new Set());\n            }\n\n            tokens.get(fuzzyId).add(id);\n            connections[id] = socket;\n            return _context.abrupt(\"return\", id);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/* return ok or no\n  The function simply looks for an entry in the tokens map.  \n*/\n\n\nexports.ping = function (fuzzyId) {\n  if (tokens.has(fuzzyId) && tokens.get(fuzzyId).size > 0) {\n    return OK;\n  }\n\n  return NO;\n}; // Return the socket associated with the Id\n\n\nexports.get = function (id) {\n  return connections[id];\n}; // Delete the socket entry identified by the Id.\n// We need to remove the token entry as well.\n\n\nexports.remove = function (id) {\n  if (id) {\n    delete connections[id];\n    var fuzzyId = id.split(\"~\")[0];\n    var ids = tokens.get(fuzzyId);\n\n    if (ids && ids.has(id)) {\n      ids[\"delete\"](id);\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbIk9LIiwiTk8iLCJjb25uZWN0aW9ucyIsInRva2VucyIsIk1hcCIsInJhbmRvbUlEIiwiZnV6enlJZCIsIm5hbWUiLCJzZWdtZW50IiwiRGF0ZSIsImdldFRpbWUiLCJ1bmlxdWVJZCIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0ciIsImV4cG9ydHMiLCJjcmVhdGUiLCJzb2NrZXQiLCJkYXRhIiwiaWQiLCJoYXMiLCJzZXQiLCJTZXQiLCJnZXQiLCJhZGQiLCJwaW5nIiwic2l6ZSIsInJlbW92ZSIsInNwbGl0IiwiaWRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsRUFBRSxHQUFHLElBQVg7QUFDQSxJQUFNQyxFQUFFLEdBQUcsSUFBWCxDLENBRUE7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHLEVBQXBCLEMsQ0FFQTs7QUFDQSxJQUFNQyxNQUFNLEdBQUcsSUFBSUMsR0FBSixFQUFmO0FBSUE7Ozs7Ozs7Ozs7QUFTQSxTQUFTQyxRQUFULENBQWtCQyxPQUFsQixFQUEwQkMsSUFBMUIsRUFBZ0M7QUFDOUIsTUFBTUMsT0FBTyxHQUFHLElBQUlDLElBQUosR0FBV0MsT0FBWCxFQUFoQjtBQUNBLE1BQU1DLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxNQUFMLEdBQWNDLFFBQWQsQ0FBdUIsRUFBdkIsRUFBMkJDLE1BQTNCLENBQWtDLENBQWxDLEVBQXFDLEVBQXJDLENBQWpCO0FBRUEsU0FBT1QsT0FBTyxHQUFHLEdBQVYsR0FBZ0JDLElBQWhCLEdBQXFCLEdBQXJCLEdBQXlCQyxPQUF6QixHQUFtQyxHQUFuQyxHQUF5Q0csUUFBaEQ7QUFDRDtBQUVEOzs7Ozs7Ozs7Ozs7O0FBV0FLLE9BQU8sQ0FBQ0MsTUFBUjtBQUFBLHFFQUFpQixpQkFBT0MsTUFBUCxFQUFlQyxJQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNUYixZQUFBQSxPQURTLEdBQ0NhLElBQUksQ0FBQ2IsT0FETjtBQUVUQyxZQUFBQSxJQUZTLEdBRUZZLElBQUksQ0FBQ1osSUFGSDtBQUdUYSxZQUFBQSxFQUhTLEdBR0pmLFFBQVEsQ0FBQ0MsT0FBRCxFQUFTQyxJQUFULENBSEo7O0FBS2YsZ0JBQUksQ0FBQ0osTUFBTSxDQUFDa0IsR0FBUCxDQUFXZixPQUFYLENBQUwsRUFBMEI7QUFDeEJILGNBQUFBLE1BQU0sQ0FBQ21CLEdBQVAsQ0FBV2hCLE9BQVgsRUFBb0IsSUFBSWlCLEdBQUosRUFBcEI7QUFDRDs7QUFFRHBCLFlBQUFBLE1BQU0sQ0FBQ3FCLEdBQVAsQ0FBV2xCLE9BQVgsRUFBb0JtQixHQUFwQixDQUF3QkwsRUFBeEI7QUFDQWxCLFlBQUFBLFdBQVcsQ0FBQ2tCLEVBQUQsQ0FBWCxHQUFrQkYsTUFBbEI7QUFWZSw2Q0FZUkUsRUFaUTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFqQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQWVBOzs7OztBQUdBSixPQUFPLENBQUNVLElBQVIsR0FBZSxVQUFDcEIsT0FBRCxFQUFhO0FBRTFCLE1BQUdILE1BQU0sQ0FBQ2tCLEdBQVAsQ0FBV2YsT0FBWCxLQUF1QkgsTUFBTSxDQUFDcUIsR0FBUCxDQUFXbEIsT0FBWCxFQUFvQnFCLElBQXBCLEdBQTJCLENBQXJELEVBQXdEO0FBQ3RELFdBQU8zQixFQUFQO0FBQ0Q7O0FBRUQsU0FBT0MsRUFBUDtBQUNELENBUEQsQyxDQVNBOzs7QUFDQWUsT0FBTyxDQUFDUSxHQUFSLEdBQWMsVUFBQ0osRUFBRDtBQUFBLFNBQVFsQixXQUFXLENBQUNrQixFQUFELENBQW5CO0FBQUEsQ0FBZCxDLENBR0E7QUFDQTs7O0FBQ0FKLE9BQU8sQ0FBQ1ksTUFBUixHQUFpQixVQUFDUixFQUFELEVBQVE7QUFDdkIsTUFBSUEsRUFBSixFQUFRO0FBQ04sV0FBT2xCLFdBQVcsQ0FBQ2tCLEVBQUQsQ0FBbEI7QUFFQSxRQUFNZCxPQUFPLEdBQUdjLEVBQUUsQ0FBQ1MsS0FBSCxDQUFTLEdBQVQsRUFBYyxDQUFkLENBQWhCO0FBQ0EsUUFBSUMsR0FBRyxHQUFHM0IsTUFBTSxDQUFDcUIsR0FBUCxDQUFXbEIsT0FBWCxDQUFWOztBQUNBLFFBQUl3QixHQUFHLElBQUlBLEdBQUcsQ0FBQ1QsR0FBSixDQUFRRCxFQUFSLENBQVgsRUFBd0I7QUFDdEJVLE1BQUFBLEdBQUcsVUFBSCxDQUFXVixFQUFYO0FBQ0Q7QUFFRjtBQUNGLENBWEQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hhcmluaW1hbmlhbS93b3Jrc3BhY2UvZmVyZXgvc3JjL2xpYi8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGlkID0+IEZvciBTb2NrZXQgLiBBIFNSVSBpZCwgZ2VuZXJhdGVkIGJ5IHRoaXMgc3lzdGVtLlxuICogXG4gKiBmdXp6eUlkID0+IEZvciBVc2VyLiBBIFNSVSBpZCwgZ2VuZXJhdGVkIGJ5IGV4dGVybmFsIHN5c3RlbS5cbiAqICBcbiAqL1xuXG5jb25zdCBPSyA9ICdvayc7XG5jb25zdCBOTyA9ICdubyc7XG5cbi8vIFRoZSBob2xkZXIgZm9yIGlkIGFuZCB0aGUgc29ja2V0LlxuY29uc3QgY29ubmVjdGlvbnMgPSB7fTtcblxuLy8gZnV6enlJZCBhcyBLZXkgYW5kIGl0cyBTZXQgb2YgcmFuZG9tIGlkcyBcbmNvbnN0IHRva2VucyA9IG5ldyBNYXAoKTtcblxuXG5cbi8qKlxuICogVGhlcmUgaXMgbm8gZ3VhcmFudGVlIHRoYXQgZXZlcnkgc29ja2V0IHdpbGwgaGF2ZSB1bmlxdWUgaWRzXG4gKiBIZW5jZSB3ZSB0YWcgdGhlIHNvY2tldHMgd2l0aCBhIHVuaXF1ZSBpZC5cbiAqIFxuICogQmVzaWRlcywgd2UgbmVlZCBhIG1lY2hhbmlzbSB0byByZW1lbWJlciB0aGUgbmFtZSBvZiB0aGUgdXNlclxuICogdGhpcyBmdXp6eUlkIGJlbG9uZ3MgZm9yIGFueSBsYWJlbGluZ1xuICogIFxuICogQHBhcmFtIHsqfSBmdXp6eUlkIFxuICovXG5mdW5jdGlvbiByYW5kb21JRChmdXp6eUlkLG5hbWUpIHtcbiAgY29uc3Qgc2VnbWVudCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpXG4gIGNvbnN0IHVuaXF1ZUlkID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDE2KTtcblxuICByZXR1cm4gZnV6enlJZCArICd+JyArIG5hbWUrJ34nK3NlZ21lbnQgKyAnficgKyB1bmlxdWVJZDtcbn1cblxuLyoqXG4gKiBXZSBjcmVhdGUgYSBcInNlY3VyZSByYW5kb20gaWRcIiBmb3IgdGhlIGdpdmVuIGZ1enp5SWQsIGJlY2F1c2VcbiAqIHdlIGV4cGVjdCBtb3JlIHRoYW4gb25lIGNvbm5lY3Rpb24gZm9yIHRoZSBzYW1lIGZ1enp5SWQgZHVyaW5nIGFcbiAqIG11bHRpLWRldmljZSBzZXR1cC5cbiAqIFxuICogV2Ugd2lsbCB0aGVuIG1haW50YWluIGFub3RoZXIgbWFwIHRvIHByZXNlcnZlIHRoZSBpZHMgY3JlYXRlZCBmb3JcbiAqIHN1Y2ggZnV6enkgaWRzLiAtIHRva2Vuc1xuICogXG4gKiBFdmVyeSBlbnRyeSBvZiBhIHRva2VuIGlzIFNldCBmb3IgZWFzaWVyIHJlbW92YWwgYW5kIHVuaXF1ZW5lc3NcbiAqICBcbiAqL1xuZXhwb3J0cy5jcmVhdGUgPSBhc3luYyAoc29ja2V0LCBkYXRhKSA9PiB7XG4gIGNvbnN0IGZ1enp5SWQgPSBkYXRhLmZ1enp5SWQ7XG4gIGNvbnN0IG5hbWUgPSBkYXRhLm5hbWU7XG4gIGNvbnN0IGlkID0gcmFuZG9tSUQoZnV6enlJZCxuYW1lKTtcblxuICBpZiAoIXRva2Vucy5oYXMoZnV6enlJZCkpIHtcbiAgICB0b2tlbnMuc2V0KGZ1enp5SWQsIG5ldyBTZXQoKSk7XG4gIH1cblxuICB0b2tlbnMuZ2V0KGZ1enp5SWQpLmFkZChpZCk7XG4gIGNvbm5lY3Rpb25zW2lkXSA9IHNvY2tldDtcblxuICByZXR1cm4gaWQ7XG59O1xuXG4vKiByZXR1cm4gb2sgb3Igbm9cbiAgVGhlIGZ1bmN0aW9uIHNpbXBseSBsb29rcyBmb3IgYW4gZW50cnkgaW4gdGhlIHRva2VucyBtYXAuICBcbiovXG5leHBvcnRzLnBpbmcgPSAoZnV6enlJZCkgPT4ge1xuICBcbiAgaWYodG9rZW5zLmhhcyhmdXp6eUlkKSAmJiB0b2tlbnMuZ2V0KGZ1enp5SWQpLnNpemUgPiAwKSB7XG4gICAgcmV0dXJuIE9LOyAgXG4gIH1cblxuICByZXR1cm4gTk87XG59O1xuXG4vLyBSZXR1cm4gdGhlIHNvY2tldCBhc3NvY2lhdGVkIHdpdGggdGhlIElkXG5leHBvcnRzLmdldCA9IChpZCkgPT4gY29ubmVjdGlvbnNbaWRdO1xuXG5cbi8vIERlbGV0ZSB0aGUgc29ja2V0IGVudHJ5IGlkZW50aWZpZWQgYnkgdGhlIElkLlxuLy8gV2UgbmVlZCB0byByZW1vdmUgdGhlIHRva2VuIGVudHJ5IGFzIHdlbGwuXG5leHBvcnRzLnJlbW92ZSA9IChpZCkgPT4ge1xuICBpZiAoaWQpIHtcbiAgICBkZWxldGUgY29ubmVjdGlvbnNbaWRdO1xuXG4gICAgY29uc3QgZnV6enlJZCA9IGlkLnNwbGl0KFwiflwiKVswXTtcbiAgICBsZXQgaWRzID0gdG9rZW5zLmdldChmdXp6eUlkKTtcbiAgICBpZiAoaWRzICYmIGlkcy5oYXMoaWQpKSB7XG4gICAgICBpZHMuZGVsZXRlKGlkKVxuICAgIH1cblxuICB9XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "OK",
        "NO",
        "connections",
        "tokens",
        "Map",
        "randomID",
        "fuzzyId",
        "name",
        "segment",
        "Date",
        "getTime",
        "uniqueId",
        "Math",
        "random",
        "toString",
        "substr",
        "exports",
        "create",
        "socket",
        "data",
        "id",
        "has",
        "set",
        "Set",
        "get",
        "add",
        "ping",
        "size",
        "remove",
        "split",
        "ids"
      ],
      "mappings": ";;;;;;AAAA;;;;;;AAOA,IAAMA,EAAE,GAAG,IAAX;AACA,IAAMC,EAAE,GAAG,IAAX,C,CAEA;;AACA,IAAMC,WAAW,GAAG,EAApB,C,CAEA;;AACA,IAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;AAIA;;;;;;;;;;AASA,SAASC,QAAT,CAAkBC,OAAlB,EAA0BC,IAA1B,EAAgC;AAC9B,MAAMC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;AACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,EAArC,CAAjB;AAEA,SAAOT,OAAO,GAAG,GAAV,GAAgBC,IAAhB,GAAqB,GAArB,GAAyBC,OAAzB,GAAmC,GAAnC,GAAyCG,QAAhD;AACD;AAED;;;;;;;;;;;;;AAWAK,OAAO,CAACC,MAAR;AAAA,qEAAiB,iBAAOC,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACTb,YAAAA,OADS,GACCa,IAAI,CAACb,OADN;AAETC,YAAAA,IAFS,GAEFY,IAAI,CAACZ,IAFH;AAGTa,YAAAA,EAHS,GAGJf,QAAQ,CAACC,OAAD,EAASC,IAAT,CAHJ;;AAKf,gBAAI,CAACJ,MAAM,CAACkB,GAAP,CAAWf,OAAX,CAAL,EAA0B;AACxBH,cAAAA,MAAM,CAACmB,GAAP,CAAWhB,OAAX,EAAoB,IAAIiB,GAAJ,EAApB;AACD;;AAEDpB,YAAAA,MAAM,CAACqB,GAAP,CAAWlB,OAAX,EAAoBmB,GAApB,CAAwBL,EAAxB;AACAlB,YAAAA,WAAW,CAACkB,EAAD,CAAX,GAAkBF,MAAlB;AAVe,6CAYRE,EAZQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;AAeA;;;;;AAGAJ,OAAO,CAACU,IAAR,GAAe,UAACpB,OAAD,EAAa;AAE1B,MAAGH,MAAM,CAACkB,GAAP,CAAWf,OAAX,KAAuBH,MAAM,CAACqB,GAAP,CAAWlB,OAAX,EAAoBqB,IAApB,GAA2B,CAArD,EAAwD;AACtD,WAAO3B,EAAP;AACD;;AAED,SAAOC,EAAP;AACD,CAPD,C,CASA;;;AACAe,OAAO,CAACQ,GAAR,GAAc,UAACJ,EAAD;AAAA,SAAQlB,WAAW,CAACkB,EAAD,CAAnB;AAAA,CAAd,C,CAGA;AACA;;;AACAJ,OAAO,CAACY,MAAR,GAAiB,UAACR,EAAD,EAAQ;AACvB,MAAIA,EAAJ,EAAQ;AACN,WAAOlB,WAAW,CAACkB,EAAD,CAAlB;AAEA,QAAMd,OAAO,GAAGc,EAAE,CAACS,KAAH,CAAS,GAAT,EAAc,CAAd,CAAhB;AACA,QAAIC,GAAG,GAAG3B,MAAM,CAACqB,GAAP,CAAWlB,OAAX,CAAV;;AACA,QAAIwB,GAAG,IAAIA,GAAG,CAACT,GAAJ,CAAQD,EAAR,CAAX,EAAwB;AACtBU,MAAAA,GAAG,UAAH,CAAWV,EAAX;AACD;AAEF;AACF,CAXD",
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/lib/",
      "sourcesContent": [
        "/**\n * id => For Socket . A SRU id, generated by this system.\n * \n * fuzzyId => For User. A SRU id, generated by external system.\n *  \n */\n\nconst OK = 'ok';\nconst NO = 'no';\n\n// The holder for id and the socket.\nconst connections = {};\n\n// fuzzyId as Key and its Set of random ids \nconst tokens = new Map();\n\n\n\n/**\n * There is no guarantee that every socket will have unique ids\n * Hence we tag the sockets with a unique id.\n * \n * Besides, we need a mechanism to remember the name of the user\n * this fuzzyId belongs for any labeling\n *  \n * @param {*} fuzzyId \n */\nfunction randomID(fuzzyId,name) {\n  const segment = new Date().getTime()\n  const uniqueId = Math.random().toString(36).substr(2, 16);\n\n  return fuzzyId + '~' + name+'~'+segment + '~' + uniqueId;\n}\n\n/**\n * We create a \"secure random id\" for the given fuzzyId, because\n * we expect more than one connection for the same fuzzyId during a\n * multi-device setup.\n * \n * We will then maintain another map to preserve the ids created for\n * such fuzzy ids. - tokens\n * \n * Every entry of a token is Set for easier removal and uniqueness\n *  \n */\nexports.create = async (socket, data) => {\n  const fuzzyId = data.fuzzyId;\n  const name = data.name;\n  const id = randomID(fuzzyId,name);\n\n  if (!tokens.has(fuzzyId)) {\n    tokens.set(fuzzyId, new Set());\n  }\n\n  tokens.get(fuzzyId).add(id);\n  connections[id] = socket;\n\n  return id;\n};\n\n/* return ok or no\n  The function simply looks for an entry in the tokens map.  \n*/\nexports.ping = (fuzzyId) => {\n  \n  if(tokens.has(fuzzyId) && tokens.get(fuzzyId).size > 0) {\n    return OK;  \n  }\n\n  return NO;\n};\n\n// Return the socket associated with the Id\nexports.get = (id) => connections[id];\n\n\n// Delete the socket entry identified by the Id.\n// We need to remove the token entry as well.\nexports.remove = (id) => {\n  if (id) {\n    delete connections[id];\n\n    const fuzzyId = id.split(\"~\")[0];\n    let ids = tokens.get(fuzzyId);\n    if (ids && ids.has(id)) {\n      ids.delete(id)\n    }\n\n  }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1592325931757
  },
  "{\"sourceRoot\":\"/Users/harinimaniam/workspace/ferex/src/lib/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/harinimaniam/workspace/ferex\",\"filename\":\"/Users/harinimaniam/workspace/ferex/src/lib/haiku.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/harinimaniam/workspace/ferex\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/lib/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/harinimaniam/workspace/ferex",
      "filename": "/Users/harinimaniam/workspace/ferex/src/lib/haiku.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/harinimaniam/workspace/ferex",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/harinimaniam/workspace/ferex/src/lib/haiku.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/harinimaniam/workspace/ferex/src/lib/haiku.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/lib/",
        "sourceFileName": "haiku.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar adjs = ['autumn', 'hidden', 'bitter', 'misty', 'silent', 'empty', 'dry', 'dark', 'summer', 'icy', 'delicate', 'quiet', 'white', 'cool', 'spring', 'winter', 'patient', 'twilight', 'dawn', 'crimson', 'wispy', 'weathered', 'blue', 'billowing', 'broken', 'cold', 'damp', 'falling', 'frosty', 'green', 'long', 'late', 'lingering', 'bold', 'little', 'morning', 'muddy', 'old', 'red', 'rough', 'still', 'small', 'sparkling', 'throbbing', 'shy', 'wandering', 'withered', 'wild', 'black', 'young', 'holy', 'solitary', 'fragrant', 'aged', 'snowy', 'proud', 'floral', 'restless', 'divine', 'polished', 'ancient', 'purple', 'lively', 'nameless'];\nvar nouns = ['waterfall', 'river', 'breeze', 'moon', 'rain', 'wind', 'sea', 'morning', 'snow', 'lake', 'sunset', 'pine', 'shadow', 'leaf', 'dawn', 'glitter', 'forest', 'hill', 'cloud', 'meadow', 'sun', 'glade', 'bird', 'brook', 'butterfly', 'bush', 'dew', 'dust', 'field', 'fire', 'flower', 'firefly', 'feather', 'grass', 'haze', 'mountain', 'night', 'pond', 'darkness', 'snowflake', 'silence', 'sound', 'sky', 'shape', 'surf', 'thunder', 'violet', 'water', 'wildflower', 'wave', 'water', 'resonance', 'sun', 'wood', 'dream', 'cherry', 'tree', 'fog', 'frost', 'voice', 'paper', 'frog', 'smoke', 'star'];\n\nmodule.exports = function () {\n  var adj = adjs[Math.floor(Math.random() * adjs.length)];\n  var noun = nouns[Math.floor(Math.random() * nouns.length)];\n  var MIN = 1000;\n  var MAX = 9999;\n  var num = Math.floor(Math.random() * (MAX + 1 - MIN)) + MIN;\n  return \"\".concat(adj, \"-\").concat(noun, \"-\").concat(num);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhaWt1LmpzIl0sIm5hbWVzIjpbImFkanMiLCJub3VucyIsIm1vZHVsZSIsImV4cG9ydHMiLCJhZGoiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJsZW5ndGgiLCJub3VuIiwiTUlOIiwiTUFYIiwibnVtIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLElBQUksR0FBRyxDQUNULFFBRFMsRUFDQyxRQURELEVBQ1csUUFEWCxFQUNxQixPQURyQixFQUM4QixRQUQ5QixFQUN3QyxPQUR4QyxFQUNpRCxLQURqRCxFQUN3RCxNQUR4RCxFQUVULFFBRlMsRUFFQyxLQUZELEVBRVEsVUFGUixFQUVvQixPQUZwQixFQUU2QixPQUY3QixFQUVzQyxNQUZ0QyxFQUU4QyxRQUY5QyxFQUV3RCxRQUZ4RCxFQUdULFNBSFMsRUFHRSxVQUhGLEVBR2MsTUFIZCxFQUdzQixTQUh0QixFQUdpQyxPQUhqQyxFQUcwQyxXQUgxQyxFQUd1RCxNQUh2RCxFQUlULFdBSlMsRUFJSSxRQUpKLEVBSWMsTUFKZCxFQUlzQixNQUp0QixFQUk4QixTQUo5QixFQUl5QyxRQUp6QyxFQUltRCxPQUpuRCxFQUtULE1BTFMsRUFLRCxNQUxDLEVBS08sV0FMUCxFQUtvQixNQUxwQixFQUs0QixRQUw1QixFQUtzQyxTQUx0QyxFQUtpRCxPQUxqRCxFQUswRCxLQUwxRCxFQU1ULEtBTlMsRUFNRixPQU5FLEVBTU8sT0FOUCxFQU1nQixPQU5oQixFQU15QixXQU56QixFQU1zQyxXQU50QyxFQU1tRCxLQU5uRCxFQU9ULFdBUFMsRUFPSSxVQVBKLEVBT2dCLE1BUGhCLEVBT3dCLE9BUHhCLEVBT2lDLE9BUGpDLEVBTzBDLE1BUDFDLEVBT2tELFVBUGxELEVBUVQsVUFSUyxFQVFHLE1BUkgsRUFRVyxPQVJYLEVBUW9CLE9BUnBCLEVBUTZCLFFBUjdCLEVBUXVDLFVBUnZDLEVBUW1ELFFBUm5ELEVBU1QsVUFUUyxFQVNHLFNBVEgsRUFTYyxRQVRkLEVBU3dCLFFBVHhCLEVBU2tDLFVBVGxDLENBQWI7QUFZRSxJQUFNQyxLQUFLLEdBQUcsQ0FDWixXQURZLEVBQ0MsT0FERCxFQUNVLFFBRFYsRUFDb0IsTUFEcEIsRUFDNEIsTUFENUIsRUFDb0MsTUFEcEMsRUFDNEMsS0FENUMsRUFDbUQsU0FEbkQsRUFFWixNQUZZLEVBRUosTUFGSSxFQUVJLFFBRkosRUFFYyxNQUZkLEVBRXNCLFFBRnRCLEVBRWdDLE1BRmhDLEVBRXdDLE1BRnhDLEVBRWdELFNBRmhELEVBR1osUUFIWSxFQUdGLE1BSEUsRUFHTSxPQUhOLEVBR2UsUUFIZixFQUd5QixLQUh6QixFQUdnQyxPQUhoQyxFQUd5QyxNQUh6QyxFQUdpRCxPQUhqRCxFQUlaLFdBSlksRUFJQyxNQUpELEVBSVMsS0FKVCxFQUlnQixNQUpoQixFQUl3QixPQUp4QixFQUlpQyxNQUpqQyxFQUl5QyxRQUp6QyxFQUltRCxTQUpuRCxFQUtaLFNBTFksRUFLRCxPQUxDLEVBS1EsTUFMUixFQUtnQixVQUxoQixFQUs0QixPQUw1QixFQUtxQyxNQUxyQyxFQUs2QyxVQUw3QyxFQU1aLFdBTlksRUFNQyxTQU5ELEVBTVksT0FOWixFQU1xQixLQU5yQixFQU00QixPQU41QixFQU1xQyxNQU5yQyxFQU02QyxTQU43QyxFQU9aLFFBUFksRUFPRixPQVBFLEVBT08sWUFQUCxFQU9xQixNQVByQixFQU82QixPQVA3QixFQU9zQyxXQVB0QyxFQU9tRCxLQVBuRCxFQVFaLE1BUlksRUFRSixPQVJJLEVBUUssUUFSTCxFQVFlLE1BUmYsRUFRdUIsS0FSdkIsRUFROEIsT0FSOUIsRUFRdUMsT0FSdkMsRUFRZ0QsT0FSaEQsRUFTWixNQVRZLEVBU0osT0FUSSxFQVNLLE1BVEwsQ0FBZDs7QUFZQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFlBQU07QUFDckIsTUFBTUMsR0FBRyxHQUFHSixJQUFJLENBQUNLLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0JQLElBQUksQ0FBQ1EsTUFBaEMsQ0FBRCxDQUFoQjtBQUNBLE1BQU1DLElBQUksR0FBR1IsS0FBSyxDQUFDSSxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWdCTixLQUFLLENBQUNPLE1BQWpDLENBQUQsQ0FBbEI7QUFDQSxNQUFNRSxHQUFHLEdBQUcsSUFBWjtBQUNBLE1BQU1DLEdBQUcsR0FBRyxJQUFaO0FBQ0EsTUFBTUMsR0FBRyxHQUFHUCxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLE1BQWtCSSxHQUFHLEdBQUcsQ0FBUCxHQUFZRCxHQUE3QixDQUFYLElBQWdEQSxHQUE1RDtBQUVBLG1CQUFVTixHQUFWLGNBQWlCSyxJQUFqQixjQUF5QkcsR0FBekI7QUFDRCxDQVJEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9oYXJpbmltYW5pYW0vd29ya3NwYWNlL2ZlcmV4L3NyYy9saWIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYWRqcyA9IFtcbiAgICAnYXV0dW1uJywgJ2hpZGRlbicsICdiaXR0ZXInLCAnbWlzdHknLCAnc2lsZW50JywgJ2VtcHR5JywgJ2RyeScsICdkYXJrJyxcbiAgICAnc3VtbWVyJywgJ2ljeScsICdkZWxpY2F0ZScsICdxdWlldCcsICd3aGl0ZScsICdjb29sJywgJ3NwcmluZycsICd3aW50ZXInLFxuICAgICdwYXRpZW50JywgJ3R3aWxpZ2h0JywgJ2Rhd24nLCAnY3JpbXNvbicsICd3aXNweScsICd3ZWF0aGVyZWQnLCAnYmx1ZScsXG4gICAgJ2JpbGxvd2luZycsICdicm9rZW4nLCAnY29sZCcsICdkYW1wJywgJ2ZhbGxpbmcnLCAnZnJvc3R5JywgJ2dyZWVuJyxcbiAgICAnbG9uZycsICdsYXRlJywgJ2xpbmdlcmluZycsICdib2xkJywgJ2xpdHRsZScsICdtb3JuaW5nJywgJ211ZGR5JywgJ29sZCcsXG4gICAgJ3JlZCcsICdyb3VnaCcsICdzdGlsbCcsICdzbWFsbCcsICdzcGFya2xpbmcnLCAndGhyb2JiaW5nJywgJ3NoeScsXG4gICAgJ3dhbmRlcmluZycsICd3aXRoZXJlZCcsICd3aWxkJywgJ2JsYWNrJywgJ3lvdW5nJywgJ2hvbHknLCAnc29saXRhcnknLFxuICAgICdmcmFncmFudCcsICdhZ2VkJywgJ3Nub3d5JywgJ3Byb3VkJywgJ2Zsb3JhbCcsICdyZXN0bGVzcycsICdkaXZpbmUnLFxuICAgICdwb2xpc2hlZCcsICdhbmNpZW50JywgJ3B1cnBsZScsICdsaXZlbHknLCAnbmFtZWxlc3MnXG4gIF07XG4gIFxuICBjb25zdCBub3VucyA9IFtcbiAgICAnd2F0ZXJmYWxsJywgJ3JpdmVyJywgJ2JyZWV6ZScsICdtb29uJywgJ3JhaW4nLCAnd2luZCcsICdzZWEnLCAnbW9ybmluZycsXG4gICAgJ3Nub3cnLCAnbGFrZScsICdzdW5zZXQnLCAncGluZScsICdzaGFkb3cnLCAnbGVhZicsICdkYXduJywgJ2dsaXR0ZXInLFxuICAgICdmb3Jlc3QnLCAnaGlsbCcsICdjbG91ZCcsICdtZWFkb3cnLCAnc3VuJywgJ2dsYWRlJywgJ2JpcmQnLCAnYnJvb2snLFxuICAgICdidXR0ZXJmbHknLCAnYnVzaCcsICdkZXcnLCAnZHVzdCcsICdmaWVsZCcsICdmaXJlJywgJ2Zsb3dlcicsICdmaXJlZmx5JyxcbiAgICAnZmVhdGhlcicsICdncmFzcycsICdoYXplJywgJ21vdW50YWluJywgJ25pZ2h0JywgJ3BvbmQnLCAnZGFya25lc3MnLFxuICAgICdzbm93Zmxha2UnLCAnc2lsZW5jZScsICdzb3VuZCcsICdza3knLCAnc2hhcGUnLCAnc3VyZicsICd0aHVuZGVyJyxcbiAgICAndmlvbGV0JywgJ3dhdGVyJywgJ3dpbGRmbG93ZXInLCAnd2F2ZScsICd3YXRlcicsICdyZXNvbmFuY2UnLCAnc3VuJyxcbiAgICAnd29vZCcsICdkcmVhbScsICdjaGVycnknLCAndHJlZScsICdmb2cnLCAnZnJvc3QnLCAndm9pY2UnLCAncGFwZXInLFxuICAgICdmcm9nJywgJ3Ntb2tlJywgJ3N0YXInXG4gIF07XG4gIFxuICBtb2R1bGUuZXhwb3J0cyA9ICgpID0+IHtcbiAgICBjb25zdCBhZGogPSBhZGpzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGFkanMubGVuZ3RoKV07XG4gICAgY29uc3Qgbm91biA9IG5vdW5zW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIG5vdW5zLmxlbmd0aCldO1xuICAgIGNvbnN0IE1JTiA9IDEwMDA7XG4gICAgY29uc3QgTUFYID0gOTk5OTtcbiAgICBjb25zdCBudW0gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoKE1BWCArIDEpIC0gTUlOKSkgKyBNSU47XG4gIFxuICAgIHJldHVybiBgJHthZGp9LSR7bm91bn0tJHtudW19YDtcbiAgfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "haiku.js"
      ],
      "names": [
        "adjs",
        "nouns",
        "module",
        "exports",
        "adj",
        "Math",
        "floor",
        "random",
        "length",
        "noun",
        "MIN",
        "MAX",
        "num"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAG,CACT,QADS,EACC,QADD,EACW,QADX,EACqB,OADrB,EAC8B,QAD9B,EACwC,OADxC,EACiD,KADjD,EACwD,MADxD,EAET,QAFS,EAEC,KAFD,EAEQ,UAFR,EAEoB,OAFpB,EAE6B,OAF7B,EAEsC,MAFtC,EAE8C,QAF9C,EAEwD,QAFxD,EAGT,SAHS,EAGE,UAHF,EAGc,MAHd,EAGsB,SAHtB,EAGiC,OAHjC,EAG0C,WAH1C,EAGuD,MAHvD,EAIT,WAJS,EAII,QAJJ,EAIc,MAJd,EAIsB,MAJtB,EAI8B,SAJ9B,EAIyC,QAJzC,EAImD,OAJnD,EAKT,MALS,EAKD,MALC,EAKO,WALP,EAKoB,MALpB,EAK4B,QAL5B,EAKsC,SALtC,EAKiD,OALjD,EAK0D,KAL1D,EAMT,KANS,EAMF,OANE,EAMO,OANP,EAMgB,OANhB,EAMyB,WANzB,EAMsC,WANtC,EAMmD,KANnD,EAOT,WAPS,EAOI,UAPJ,EAOgB,MAPhB,EAOwB,OAPxB,EAOiC,OAPjC,EAO0C,MAP1C,EAOkD,UAPlD,EAQT,UARS,EAQG,MARH,EAQW,OARX,EAQoB,OARpB,EAQ6B,QAR7B,EAQuC,UARvC,EAQmD,QARnD,EAST,UATS,EASG,SATH,EASc,QATd,EASwB,QATxB,EASkC,UATlC,CAAb;AAYE,IAAMC,KAAK,GAAG,CACZ,WADY,EACC,OADD,EACU,QADV,EACoB,MADpB,EAC4B,MAD5B,EACoC,MADpC,EAC4C,KAD5C,EACmD,SADnD,EAEZ,MAFY,EAEJ,MAFI,EAEI,QAFJ,EAEc,MAFd,EAEsB,QAFtB,EAEgC,MAFhC,EAEwC,MAFxC,EAEgD,SAFhD,EAGZ,QAHY,EAGF,MAHE,EAGM,OAHN,EAGe,QAHf,EAGyB,KAHzB,EAGgC,OAHhC,EAGyC,MAHzC,EAGiD,OAHjD,EAIZ,WAJY,EAIC,MAJD,EAIS,KAJT,EAIgB,MAJhB,EAIwB,OAJxB,EAIiC,MAJjC,EAIyC,QAJzC,EAImD,SAJnD,EAKZ,SALY,EAKD,OALC,EAKQ,MALR,EAKgB,UALhB,EAK4B,OAL5B,EAKqC,MALrC,EAK6C,UAL7C,EAMZ,WANY,EAMC,SAND,EAMY,OANZ,EAMqB,KANrB,EAM4B,OAN5B,EAMqC,MANrC,EAM6C,SAN7C,EAOZ,QAPY,EAOF,OAPE,EAOO,YAPP,EAOqB,MAPrB,EAO6B,OAP7B,EAOsC,WAPtC,EAOmD,KAPnD,EAQZ,MARY,EAQJ,OARI,EAQK,QARL,EAQe,MARf,EAQuB,KARvB,EAQ8B,OAR9B,EAQuC,OARvC,EAQgD,OARhD,EASZ,MATY,EASJ,OATI,EASK,MATL,CAAd;;AAYAC,MAAM,CAACC,OAAP,GAAiB,YAAM;AACrB,MAAMC,GAAG,GAAGJ,IAAI,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,IAAI,CAACQ,MAAhC,CAAD,CAAhB;AACA,MAAMC,IAAI,GAAGR,KAAK,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,KAAK,CAACO,MAAjC,CAAD,CAAlB;AACA,MAAME,GAAG,GAAG,IAAZ;AACA,MAAMC,GAAG,GAAG,IAAZ;AACA,MAAMC,GAAG,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAkBI,GAAG,GAAG,CAAP,GAAYD,GAA7B,CAAX,IAAgDA,GAA5D;AAEA,mBAAUN,GAAV,cAAiBK,IAAjB,cAAyBG,GAAzB;AACD,CARD",
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/lib/",
      "sourcesContent": [
        "const adjs = [\n    'autumn', 'hidden', 'bitter', 'misty', 'silent', 'empty', 'dry', 'dark',\n    'summer', 'icy', 'delicate', 'quiet', 'white', 'cool', 'spring', 'winter',\n    'patient', 'twilight', 'dawn', 'crimson', 'wispy', 'weathered', 'blue',\n    'billowing', 'broken', 'cold', 'damp', 'falling', 'frosty', 'green',\n    'long', 'late', 'lingering', 'bold', 'little', 'morning', 'muddy', 'old',\n    'red', 'rough', 'still', 'small', 'sparkling', 'throbbing', 'shy',\n    'wandering', 'withered', 'wild', 'black', 'young', 'holy', 'solitary',\n    'fragrant', 'aged', 'snowy', 'proud', 'floral', 'restless', 'divine',\n    'polished', 'ancient', 'purple', 'lively', 'nameless'\n  ];\n  \n  const nouns = [\n    'waterfall', 'river', 'breeze', 'moon', 'rain', 'wind', 'sea', 'morning',\n    'snow', 'lake', 'sunset', 'pine', 'shadow', 'leaf', 'dawn', 'glitter',\n    'forest', 'hill', 'cloud', 'meadow', 'sun', 'glade', 'bird', 'brook',\n    'butterfly', 'bush', 'dew', 'dust', 'field', 'fire', 'flower', 'firefly',\n    'feather', 'grass', 'haze', 'mountain', 'night', 'pond', 'darkness',\n    'snowflake', 'silence', 'sound', 'sky', 'shape', 'surf', 'thunder',\n    'violet', 'water', 'wildflower', 'wave', 'water', 'resonance', 'sun',\n    'wood', 'dream', 'cherry', 'tree', 'fog', 'frost', 'voice', 'paper',\n    'frog', 'smoke', 'star'\n  ];\n  \n  module.exports = () => {\n    const adj = adjs[Math.floor(Math.random() * adjs.length)];\n    const noun = nouns[Math.floor(Math.random() * nouns.length)];\n    const MIN = 1000;\n    const MAX = 9999;\n    const num = Math.floor(Math.random() * ((MAX + 1) - MIN)) + MIN;\n  \n    return `${adj}-${noun}-${num}`;\n  };"
      ]
    },
    "sourceType": "script",
    "mtime": 1591163877582
  },
  "{\"sourceRoot\":\"/Users/harinimaniam/workspace/ferex/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/harinimaniam/workspace/ferex\",\"filename\":\"/Users/harinimaniam/workspace/ferex/src/signalServer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/harinimaniam/workspace/ferex\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/harinimaniam/workspace/ferex",
      "filename": "/Users/harinimaniam/workspace/ferex/src/signalServer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/harinimaniam/workspace/ferex",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/harinimaniam/workspace/ferex/src/signalServer.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/harinimaniam/workspace/ferex/src/signalServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
        "sourceFileName": "signalServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar io = require('socket.io');\n\nvar users = require('./lib/users');\n\nvar liveSessions = require('./lib/liveSessions');\n/**\n * Initialize when a connection is made\n * \n * @param {SocketIO.Socket} socket\n */\n\n\nfunction initSocket(socket) {\n  var id;\n  socket.on('init', /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Init received\");\n              _context.next = 3;\n              return users.create(socket, data);\n\n            case 3:\n              id = _context.sent;\n              console.log(id);\n              socket.emit('token', {\n                id: id\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()).on('ding', function (data) {\n    var ans = users.ping(data.fuzzyId);\n    socket.emit('answer', {\n      fuzzyId: data.fuzzyId,\n      ans: ans\n    });\n  }).on('joinSession', function (data) {\n    var advice = liveSessions.joinSession(data, id);\n    socket.emit('callAdvice', advice);\n  }).on('request', function (data) {\n    var receiver = users.get(data.to);\n\n    if (receiver) {\n      receiver.emit('request', {\n        from: id\n      });\n    }\n  }).on('call', function (data) {\n    var receiver = users.get(data.to);\n\n    if (receiver) {\n      receiver.emit('call', _objectSpread(_objectSpread({}, data), {}, {\n        from: id\n      }));\n    } else {\n      socket.emit('failed');\n    }\n  }).on('end', function (data) {\n    var receiver = users.get(data.to);\n\n    if (receiver) {\n      receiver.emit('end');\n    }\n  }).on('disconnect', function () {\n    users.remove(id);\n    console.log(id, 'disconnected');\n  });\n}\n\nmodule.exports = function (server) {\n  io.listen(server, {\n    log: true\n  }).on('connection', initSocket);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ25hbFNlcnZlci5qcyJdLCJuYW1lcyI6WyJpbyIsInJlcXVpcmUiLCJ1c2VycyIsImxpdmVTZXNzaW9ucyIsImluaXRTb2NrZXQiLCJzb2NrZXQiLCJpZCIsIm9uIiwiZGF0YSIsImNvbnNvbGUiLCJsb2ciLCJjcmVhdGUiLCJlbWl0IiwiYW5zIiwicGluZyIsImZ1enp5SWQiLCJhZHZpY2UiLCJqb2luU2Vzc2lvbiIsInJlY2VpdmVyIiwiZ2V0IiwidG8iLCJmcm9tIiwicmVtb3ZlIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlcnZlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUFsQjs7QUFDQSxJQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQXJCOztBQUNBLElBQU1FLFlBQVksR0FBR0YsT0FBTyxDQUFDLG9CQUFELENBQTVCO0FBRUE7Ozs7Ozs7QUFLQSxTQUFTRyxVQUFULENBQW9CQyxNQUFwQixFQUE0QjtBQUMxQixNQUFJQyxFQUFKO0FBQ0FELEVBQUFBLE1BQU0sQ0FDSEUsRUFESCxDQUNNLE1BRE47QUFBQSx1RUFDYyxpQkFBT0MsSUFBUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1ZDLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGVBQVo7QUFEVTtBQUFBLHFCQUVDUixLQUFLLENBQUNTLE1BQU4sQ0FBYU4sTUFBYixFQUFxQkcsSUFBckIsQ0FGRDs7QUFBQTtBQUVWRixjQUFBQSxFQUZVO0FBR1ZHLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixFQUFaO0FBQ0FELGNBQUFBLE1BQU0sQ0FBQ08sSUFBUCxDQUFZLE9BQVosRUFBcUI7QUFBRU4sZ0JBQUFBLEVBQUUsRUFBRkE7QUFBRixlQUFyQjs7QUFKVTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQURkOztBQUFBO0FBQUE7QUFBQTtBQUFBLE9BT0dDLEVBUEgsQ0FPTSxNQVBOLEVBT2MsVUFBQ0MsSUFBRCxFQUFVO0FBQ3BCLFFBQU1LLEdBQUcsR0FBR1gsS0FBSyxDQUFDWSxJQUFOLENBQVdOLElBQUksQ0FBQ08sT0FBaEIsQ0FBWjtBQUNBVixJQUFBQSxNQUFNLENBQUNPLElBQVAsQ0FBWSxRQUFaLEVBQXNCO0FBQUVHLE1BQUFBLE9BQU8sRUFBQ1AsSUFBSSxDQUFDTyxPQUFmO0FBQXdCRixNQUFBQSxHQUFHLEVBQUNBO0FBQTVCLEtBQXRCO0FBQ0QsR0FWSCxFQVdHTixFQVhILENBV00sYUFYTixFQVdvQixVQUFDQyxJQUFELEVBQVU7QUFDMUIsUUFBTVEsTUFBTSxHQUFHYixZQUFZLENBQUNjLFdBQWIsQ0FBeUJULElBQXpCLEVBQThCRixFQUE5QixDQUFmO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ08sSUFBUCxDQUFZLFlBQVosRUFBeUJJLE1BQXpCO0FBQ0QsR0FkSCxFQWVHVCxFQWZILENBZU0sU0FmTixFQWVpQixVQUFDQyxJQUFELEVBQVU7QUFDdkIsUUFBTVUsUUFBUSxHQUFHaEIsS0FBSyxDQUFDaUIsR0FBTixDQUFVWCxJQUFJLENBQUNZLEVBQWYsQ0FBakI7O0FBQ0EsUUFBSUYsUUFBSixFQUFjO0FBQ1pBLE1BQUFBLFFBQVEsQ0FBQ04sSUFBVCxDQUFjLFNBQWQsRUFBeUI7QUFBRVMsUUFBQUEsSUFBSSxFQUFFZjtBQUFSLE9BQXpCO0FBQ0Q7QUFDRixHQXBCSCxFQXFCR0MsRUFyQkgsQ0FxQk0sTUFyQk4sRUFxQmMsVUFBQ0MsSUFBRCxFQUFVO0FBQ3BCLFFBQU1VLFFBQVEsR0FBR2hCLEtBQUssQ0FBQ2lCLEdBQU4sQ0FBVVgsSUFBSSxDQUFDWSxFQUFmLENBQWpCOztBQUNBLFFBQUlGLFFBQUosRUFBYztBQUNaQSxNQUFBQSxRQUFRLENBQUNOLElBQVQsQ0FBYyxNQUFkLGtDQUEyQkosSUFBM0I7QUFBaUNhLFFBQUFBLElBQUksRUFBRWY7QUFBdkM7QUFDRCxLQUZELE1BRU87QUFDTEQsTUFBQUEsTUFBTSxDQUFDTyxJQUFQLENBQVksUUFBWjtBQUNEO0FBQ0YsR0E1QkgsRUE2QkdMLEVBN0JILENBNkJNLEtBN0JOLEVBNkJhLFVBQUNDLElBQUQsRUFBVTtBQUNuQixRQUFNVSxRQUFRLEdBQUdoQixLQUFLLENBQUNpQixHQUFOLENBQVVYLElBQUksQ0FBQ1ksRUFBZixDQUFqQjs7QUFDQSxRQUFJRixRQUFKLEVBQWM7QUFDWkEsTUFBQUEsUUFBUSxDQUFDTixJQUFULENBQWMsS0FBZDtBQUNEO0FBQ0YsR0FsQ0gsRUFtQ0dMLEVBbkNILENBbUNNLFlBbkNOLEVBbUNvQixZQUFNO0FBQ3RCTCxJQUFBQSxLQUFLLENBQUNvQixNQUFOLENBQWFoQixFQUFiO0FBQ0FHLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixFQUFaLEVBQWdCLGNBQWhCO0FBQ0QsR0F0Q0g7QUF1Q0Q7O0FBRURpQixNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsTUFBRCxFQUFZO0FBQzNCekIsRUFBQUEsRUFBRSxDQUNDMEIsTUFESCxDQUNVRCxNQURWLEVBQ2tCO0FBQUVmLElBQUFBLEdBQUcsRUFBRTtBQUFQLEdBRGxCLEVBRUdILEVBRkgsQ0FFTSxZQUZOLEVBRW9CSCxVQUZwQjtBQUdELENBSkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2hhcmluaW1hbmlhbS93b3Jrc3BhY2UvZmVyZXgvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGlvID0gcmVxdWlyZSgnc29ja2V0LmlvJyk7XG5jb25zdCB1c2VycyA9IHJlcXVpcmUoJy4vbGliL3VzZXJzJyk7XG5jb25zdCBsaXZlU2Vzc2lvbnMgPSByZXF1aXJlKCcuL2xpYi9saXZlU2Vzc2lvbnMnKTtcblxuLyoqXG4gKiBJbml0aWFsaXplIHdoZW4gYSBjb25uZWN0aW9uIGlzIG1hZGVcbiAqIFxuICogQHBhcmFtIHtTb2NrZXRJTy5Tb2NrZXR9IHNvY2tldFxuICovXG5mdW5jdGlvbiBpbml0U29ja2V0KHNvY2tldCkge1xuICBsZXQgaWQ7XG4gIHNvY2tldFxuICAgIC5vbignaW5pdCcsIGFzeW5jIChkYXRhKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhcIkluaXQgcmVjZWl2ZWRcIik7XG4gICAgICBpZCA9IGF3YWl0IHVzZXJzLmNyZWF0ZShzb2NrZXQsIGRhdGEpO1xuICAgICAgY29uc29sZS5sb2coaWQpO1xuICAgICAgc29ja2V0LmVtaXQoJ3Rva2VuJywgeyBpZCB9KTtcbiAgICB9KVxuICAgIC5vbignZGluZycsIChkYXRhKSA9PiB7XG4gICAgICBjb25zdCBhbnMgPSB1c2Vycy5waW5nKGRhdGEuZnV6enlJZCk7XG4gICAgICBzb2NrZXQuZW1pdCgnYW5zd2VyJywgeyBmdXp6eUlkOmRhdGEuZnV6enlJZCwgYW5zOmFucyB9KTtcbiAgICB9KVxuICAgIC5vbignam9pblNlc3Npb24nLChkYXRhKSA9PiB7XG4gICAgICBjb25zdCBhZHZpY2UgPSBsaXZlU2Vzc2lvbnMuam9pblNlc3Npb24oZGF0YSxpZCk7XG4gICAgICBzb2NrZXQuZW1pdCgnY2FsbEFkdmljZScsYWR2aWNlKTtcbiAgICB9KVxuICAgIC5vbigncmVxdWVzdCcsIChkYXRhKSA9PiB7XG4gICAgICBjb25zdCByZWNlaXZlciA9IHVzZXJzLmdldChkYXRhLnRvKTtcbiAgICAgIGlmIChyZWNlaXZlcikge1xuICAgICAgICByZWNlaXZlci5lbWl0KCdyZXF1ZXN0JywgeyBmcm9tOiBpZCB9KTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC5vbignY2FsbCcsIChkYXRhKSA9PiB7XG4gICAgICBjb25zdCByZWNlaXZlciA9IHVzZXJzLmdldChkYXRhLnRvKTtcbiAgICAgIGlmIChyZWNlaXZlcikge1xuICAgICAgICByZWNlaXZlci5lbWl0KCdjYWxsJywgeyAuLi5kYXRhLCBmcm9tOiBpZCB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNvY2tldC5lbWl0KCdmYWlsZWQnKTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC5vbignZW5kJywgKGRhdGEpID0+IHtcbiAgICAgIGNvbnN0IHJlY2VpdmVyID0gdXNlcnMuZ2V0KGRhdGEudG8pO1xuICAgICAgaWYgKHJlY2VpdmVyKSB7XG4gICAgICAgIHJlY2VpdmVyLmVtaXQoJ2VuZCcpO1xuICAgICAgfVxuICAgIH0pXG4gICAgLm9uKCdkaXNjb25uZWN0JywgKCkgPT4ge1xuICAgICAgdXNlcnMucmVtb3ZlKGlkKTtcbiAgICAgIGNvbnNvbGUubG9nKGlkLCAnZGlzY29ubmVjdGVkJyk7XG4gICAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gKHNlcnZlcikgPT4ge1xuICBpb1xuICAgIC5saXN0ZW4oc2VydmVyLCB7IGxvZzogdHJ1ZSB9KVxuICAgIC5vbignY29ubmVjdGlvbicsIGluaXRTb2NrZXQpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "signalServer.js"
      ],
      "names": [
        "io",
        "require",
        "users",
        "liveSessions",
        "initSocket",
        "socket",
        "id",
        "on",
        "data",
        "console",
        "log",
        "create",
        "emit",
        "ans",
        "ping",
        "fuzzyId",
        "advice",
        "joinSession",
        "receiver",
        "get",
        "to",
        "from",
        "remove",
        "module",
        "exports",
        "server",
        "listen"
      ],
      "mappings": ";;;;;;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAArB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,oBAAD,CAA5B;AAEA;;;;;;;AAKA,SAASG,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,MAAIC,EAAJ;AACAD,EAAAA,MAAM,CACHE,EADH,CACM,MADN;AAAA,uEACc,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AADU;AAAA,qBAECR,KAAK,CAACS,MAAN,CAAaN,MAAb,EAAqBG,IAArB,CAFD;;AAAA;AAEVF,cAAAA,EAFU;AAGVG,cAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACAD,cAAAA,MAAM,CAACO,IAAP,CAAY,OAAZ,EAAqB;AAAEN,gBAAAA,EAAE,EAAFA;AAAF,eAArB;;AAJU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADd;;AAAA;AAAA;AAAA;AAAA,OAOGC,EAPH,CAOM,MAPN,EAOc,UAACC,IAAD,EAAU;AACpB,QAAMK,GAAG,GAAGX,KAAK,CAACY,IAAN,CAAWN,IAAI,CAACO,OAAhB,CAAZ;AACAV,IAAAA,MAAM,CAACO,IAAP,CAAY,QAAZ,EAAsB;AAAEG,MAAAA,OAAO,EAACP,IAAI,CAACO,OAAf;AAAwBF,MAAAA,GAAG,EAACA;AAA5B,KAAtB;AACD,GAVH,EAWGN,EAXH,CAWM,aAXN,EAWoB,UAACC,IAAD,EAAU;AAC1B,QAAMQ,MAAM,GAAGb,YAAY,CAACc,WAAb,CAAyBT,IAAzB,EAA8BF,EAA9B,CAAf;AACAD,IAAAA,MAAM,CAACO,IAAP,CAAY,YAAZ,EAAyBI,MAAzB;AACD,GAdH,EAeGT,EAfH,CAeM,SAfN,EAeiB,UAACC,IAAD,EAAU;AACvB,QAAMU,QAAQ,GAAGhB,KAAK,CAACiB,GAAN,CAAUX,IAAI,CAACY,EAAf,CAAjB;;AACA,QAAIF,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACN,IAAT,CAAc,SAAd,EAAyB;AAAES,QAAAA,IAAI,EAAEf;AAAR,OAAzB;AACD;AACF,GApBH,EAqBGC,EArBH,CAqBM,MArBN,EAqBc,UAACC,IAAD,EAAU;AACpB,QAAMU,QAAQ,GAAGhB,KAAK,CAACiB,GAAN,CAAUX,IAAI,CAACY,EAAf,CAAjB;;AACA,QAAIF,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACN,IAAT,CAAc,MAAd,kCAA2BJ,IAA3B;AAAiCa,QAAAA,IAAI,EAAEf;AAAvC;AACD,KAFD,MAEO;AACLD,MAAAA,MAAM,CAACO,IAAP,CAAY,QAAZ;AACD;AACF,GA5BH,EA6BGL,EA7BH,CA6BM,KA7BN,EA6Ba,UAACC,IAAD,EAAU;AACnB,QAAMU,QAAQ,GAAGhB,KAAK,CAACiB,GAAN,CAAUX,IAAI,CAACY,EAAf,CAAjB;;AACA,QAAIF,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACN,IAAT,CAAc,KAAd;AACD;AACF,GAlCH,EAmCGL,EAnCH,CAmCM,YAnCN,EAmCoB,YAAM;AACtBL,IAAAA,KAAK,CAACoB,MAAN,CAAahB,EAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ,EAAgB,cAAhB;AACD,GAtCH;AAuCD;;AAEDiB,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAAY;AAC3BzB,EAAAA,EAAE,CACC0B,MADH,CACUD,MADV,EACkB;AAAEf,IAAAA,GAAG,EAAE;AAAP,GADlB,EAEGH,EAFH,CAEM,YAFN,EAEoBH,UAFpB;AAGD,CAJD",
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/",
      "sourcesContent": [
        "const io = require('socket.io');\nconst users = require('./lib/users');\nconst liveSessions = require('./lib/liveSessions');\n\n/**\n * Initialize when a connection is made\n * \n * @param {SocketIO.Socket} socket\n */\nfunction initSocket(socket) {\n  let id;\n  socket\n    .on('init', async (data) => {\n      console.log(\"Init received\");\n      id = await users.create(socket, data);\n      console.log(id);\n      socket.emit('token', { id });\n    })\n    .on('ding', (data) => {\n      const ans = users.ping(data.fuzzyId);\n      socket.emit('answer', { fuzzyId:data.fuzzyId, ans:ans });\n    })\n    .on('joinSession',(data) => {\n      const advice = liveSessions.joinSession(data,id);\n      socket.emit('callAdvice',advice);\n    })\n    .on('request', (data) => {\n      const receiver = users.get(data.to);\n      if (receiver) {\n        receiver.emit('request', { from: id });\n      }\n    })\n    .on('call', (data) => {\n      const receiver = users.get(data.to);\n      if (receiver) {\n        receiver.emit('call', { ...data, from: id });\n      } else {\n        socket.emit('failed');\n      }\n    })\n    .on('end', (data) => {\n      const receiver = users.get(data.to);\n      if (receiver) {\n        receiver.emit('end');\n      }\n    })\n    .on('disconnect', () => {\n      users.remove(id);\n      console.log(id, 'disconnected');\n    });\n}\n\nmodule.exports = (server) => {\n  io\n    .listen(server, { log: true })\n    .on('connection', initSocket);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592321174571
  },
  "{\"sourceRoot\":\"/Users/harinimaniam/workspace/ferex/src/lib/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/harinimaniam/workspace/ferex\",\"filename\":\"/Users/harinimaniam/workspace/ferex/src/lib/liveSessions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/harinimaniam/workspace/ferex\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/lib/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/harinimaniam/workspace/ferex",
      "filename": "/Users/harinimaniam/workspace/ferex/src/lib/liveSessions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/harinimaniam/workspace/ferex",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/harinimaniam/workspace/ferex/src/lib/liveSessions.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/harinimaniam/workspace/ferex/src/lib/liveSessions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/lib/",
        "sourceFileName": "liveSessions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar sessionGuides = new Map();\nvar sessionMembers = new Map();\nvar ERROR = {\n  status: 'no',\n  reason: \"Neither Guide nor Member has joined\"\n};\nvar NO_MEMBER = {\n  status: 'no',\n  reason: \"Awaiting Member\"\n};\nvar NO_GUIDE = {\n  status: 'no',\n  reason: \"Awaiting Guide\"\n};\nvar GUIDE = \"guide\";\nvar COACH = \"coach\";\n/**\n * The Session Data should contain the \n * sessionId,\n * user fuzzyId and \n * Role of the user who just joined the session\n * \n * \n * @param {*} sessionData \n * @param {*} socketId \n */\n\nexports.joinSession = function (sessionData, socketId) {\n  var sessionId = sessionData.sessionId;\n  var role = sessionData.role;\n\n  if (role === GUIDE || role === COACH) {\n    sessionGuides.set(sessionId, _objectSpread(_objectSpread({}, sessionData), {}, {\n      socketId: socketId\n    }));\n  } else {\n    sessionMembers.set(sessionId, _objectSpread(_objectSpread({}, sessionData), {}, {\n      socketId: socketId\n    }));\n  }\n\n  return buildAdvice(sessionId);\n};\n/**\n * Return a suitable advice as a result for this join action,\n * which the socket client receivers may levarage to take action\n * \n */\n\n\nfunction buildAdvice(sessionId) {\n  var hasGuide = sessionGuides.has(sessionId);\n  var hasMember = sessionMembers.has(sessionId);\n\n  if (!hasGuide && !hasMember) {\n    return ERROR;\n  }\n\n  if (hasGuide && !hasMember) {\n    return NO_MEMBER;\n  }\n\n  if (hasMember && !hasGuide) {\n    return NO_GUIDE;\n  }\n\n  var guideSocketId = sessionGuides.get(sessionId).socketId;\n  var memberSocketId = sessionMembers.get(sessionId).socketId;\n  return {\n    status: 'ok',\n    reason: \"Ready\",\n    guideSocketId: guideSocketId,\n    memberSocketId: memberSocketId\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpdmVTZXNzaW9ucy5qcyJdLCJuYW1lcyI6WyJzZXNzaW9uR3VpZGVzIiwiTWFwIiwic2Vzc2lvbk1lbWJlcnMiLCJFUlJPUiIsInN0YXR1cyIsInJlYXNvbiIsIk5PX01FTUJFUiIsIk5PX0dVSURFIiwiR1VJREUiLCJDT0FDSCIsImV4cG9ydHMiLCJqb2luU2Vzc2lvbiIsInNlc3Npb25EYXRhIiwic29ja2V0SWQiLCJzZXNzaW9uSWQiLCJyb2xlIiwic2V0IiwiYnVpbGRBZHZpY2UiLCJoYXNHdWlkZSIsImhhcyIsImhhc01lbWJlciIsImd1aWRlU29ja2V0SWQiLCJnZXQiLCJtZW1iZXJTb2NrZXRJZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFQSxJQUFNQSxhQUFhLEdBQUcsSUFBSUMsR0FBSixFQUF0QjtBQUNBLElBQU1DLGNBQWMsR0FBRyxJQUFJRCxHQUFKLEVBQXZCO0FBRUEsSUFBTUUsS0FBSyxHQUFHO0FBQUVDLEVBQUFBLE1BQU0sRUFBRSxJQUFWO0FBQWdCQyxFQUFBQSxNQUFNLEVBQUU7QUFBeEIsQ0FBZDtBQUNBLElBQU1DLFNBQVMsR0FBRztBQUFFRixFQUFBQSxNQUFNLEVBQUUsSUFBVjtBQUFnQkMsRUFBQUEsTUFBTSxFQUFFO0FBQXhCLENBQWxCO0FBQ0EsSUFBTUUsUUFBUSxHQUFHO0FBQUVILEVBQUFBLE1BQU0sRUFBRSxJQUFWO0FBQWdCQyxFQUFBQSxNQUFNLEVBQUU7QUFBeEIsQ0FBakI7QUFDQSxJQUFNRyxLQUFLLEdBQUcsT0FBZDtBQUNBLElBQU1DLEtBQUssR0FBRyxPQUFkO0FBRUE7Ozs7Ozs7Ozs7O0FBVUFDLE9BQU8sQ0FBQ0MsV0FBUixHQUFzQixVQUFDQyxXQUFELEVBQWNDLFFBQWQsRUFBMkI7QUFDN0MsTUFBTUMsU0FBUyxHQUFHRixXQUFXLENBQUNFLFNBQTlCO0FBQ0EsTUFBTUMsSUFBSSxHQUFHSCxXQUFXLENBQUNHLElBQXpCOztBQUVBLE1BQUlBLElBQUksS0FBS1AsS0FBVCxJQUFrQk8sSUFBSSxLQUFLTixLQUEvQixFQUFzQztBQUNsQ1QsSUFBQUEsYUFBYSxDQUFDZ0IsR0FBZCxDQUFrQkYsU0FBbEIsa0NBQWtDRixXQUFsQztBQUErQ0MsTUFBQUEsUUFBUSxFQUFFQTtBQUF6RDtBQUNILEdBRkQsTUFHSztBQUNEWCxJQUFBQSxjQUFjLENBQUNjLEdBQWYsQ0FBbUJGLFNBQW5CLGtDQUFtQ0YsV0FBbkM7QUFBZ0RDLE1BQUFBLFFBQVEsRUFBRUE7QUFBMUQ7QUFDSDs7QUFFRCxTQUFPSSxXQUFXLENBQUNILFNBQUQsQ0FBbEI7QUFDSCxDQVpEO0FBZUE7Ozs7Ozs7QUFLQSxTQUFTRyxXQUFULENBQXFCSCxTQUFyQixFQUFnQztBQUM1QixNQUFNSSxRQUFRLEdBQUdsQixhQUFhLENBQUNtQixHQUFkLENBQWtCTCxTQUFsQixDQUFqQjtBQUNBLE1BQU1NLFNBQVMsR0FBR2xCLGNBQWMsQ0FBQ2lCLEdBQWYsQ0FBbUJMLFNBQW5CLENBQWxCOztBQUVBLE1BQUksQ0FBQ0ksUUFBRCxJQUFhLENBQUNFLFNBQWxCLEVBQTZCO0FBQ3pCLFdBQU9qQixLQUFQO0FBQ0g7O0FBQ0QsTUFBSWUsUUFBUSxJQUFJLENBQUNFLFNBQWpCLEVBQTRCO0FBQ3hCLFdBQU9kLFNBQVA7QUFDSDs7QUFDRCxNQUFJYyxTQUFTLElBQUksQ0FBQ0YsUUFBbEIsRUFBNEI7QUFDeEIsV0FBT1gsUUFBUDtBQUNIOztBQUVELE1BQU1jLGFBQWEsR0FBR3JCLGFBQWEsQ0FBQ3NCLEdBQWQsQ0FBa0JSLFNBQWxCLEVBQTZCRCxRQUFuRDtBQUNBLE1BQU1VLGNBQWMsR0FBR3JCLGNBQWMsQ0FBQ29CLEdBQWYsQ0FBbUJSLFNBQW5CLEVBQThCRCxRQUFyRDtBQUVBLFNBQU87QUFBRVQsSUFBQUEsTUFBTSxFQUFFLElBQVY7QUFBZ0JDLElBQUFBLE1BQU0sRUFBRSxPQUF4QjtBQUFpQ2dCLElBQUFBLGFBQWEsRUFBRUEsYUFBaEQ7QUFBK0RFLElBQUFBLGNBQWMsRUFBRUE7QUFBL0UsR0FBUDtBQUNIIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9oYXJpbmltYW5pYW0vd29ya3NwYWNlL2ZlcmV4L3NyYy9saWIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbmNvbnN0IHNlc3Npb25HdWlkZXMgPSBuZXcgTWFwKCk7XG5jb25zdCBzZXNzaW9uTWVtYmVycyA9IG5ldyBNYXAoKTtcblxuY29uc3QgRVJST1IgPSB7IHN0YXR1czogJ25vJywgcmVhc29uOiBcIk5laXRoZXIgR3VpZGUgbm9yIE1lbWJlciBoYXMgam9pbmVkXCIgfTtcbmNvbnN0IE5PX01FTUJFUiA9IHsgc3RhdHVzOiAnbm8nLCByZWFzb246IFwiQXdhaXRpbmcgTWVtYmVyXCIgfTtcbmNvbnN0IE5PX0dVSURFID0geyBzdGF0dXM6ICdubycsIHJlYXNvbjogXCJBd2FpdGluZyBHdWlkZVwiIH07XG5jb25zdCBHVUlERSA9IFwiZ3VpZGVcIjtcbmNvbnN0IENPQUNIID0gXCJjb2FjaFwiO1xuXG4vKipcbiAqIFRoZSBTZXNzaW9uIERhdGEgc2hvdWxkIGNvbnRhaW4gdGhlIFxuICogc2Vzc2lvbklkLFxuICogdXNlciBmdXp6eUlkIGFuZCBcbiAqIFJvbGUgb2YgdGhlIHVzZXIgd2hvIGp1c3Qgam9pbmVkIHRoZSBzZXNzaW9uXG4gKiBcbiAqIFxuICogQHBhcmFtIHsqfSBzZXNzaW9uRGF0YSBcbiAqIEBwYXJhbSB7Kn0gc29ja2V0SWQgXG4gKi9cbmV4cG9ydHMuam9pblNlc3Npb24gPSAoc2Vzc2lvbkRhdGEsIHNvY2tldElkKSA9PiB7XG4gICAgY29uc3Qgc2Vzc2lvbklkID0gc2Vzc2lvbkRhdGEuc2Vzc2lvbklkO1xuICAgIGNvbnN0IHJvbGUgPSBzZXNzaW9uRGF0YS5yb2xlO1xuXG4gICAgaWYgKHJvbGUgPT09IEdVSURFIHx8IHJvbGUgPT09IENPQUNIKSB7XG4gICAgICAgIHNlc3Npb25HdWlkZXMuc2V0KHNlc3Npb25JZCwgeyAuLi5zZXNzaW9uRGF0YSwgc29ja2V0SWQ6IHNvY2tldElkIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgc2Vzc2lvbk1lbWJlcnMuc2V0KHNlc3Npb25JZCwgeyAuLi5zZXNzaW9uRGF0YSwgc29ja2V0SWQ6IHNvY2tldElkIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBidWlsZEFkdmljZShzZXNzaW9uSWQpO1xufVxuXG5cbi8qKlxuICogUmV0dXJuIGEgc3VpdGFibGUgYWR2aWNlIGFzIGEgcmVzdWx0IGZvciB0aGlzIGpvaW4gYWN0aW9uLFxuICogd2hpY2ggdGhlIHNvY2tldCBjbGllbnQgcmVjZWl2ZXJzIG1heSBsZXZhcmFnZSB0byB0YWtlIGFjdGlvblxuICogXG4gKi9cbmZ1bmN0aW9uIGJ1aWxkQWR2aWNlKHNlc3Npb25JZCkge1xuICAgIGNvbnN0IGhhc0d1aWRlID0gc2Vzc2lvbkd1aWRlcy5oYXMoc2Vzc2lvbklkKTtcbiAgICBjb25zdCBoYXNNZW1iZXIgPSBzZXNzaW9uTWVtYmVycy5oYXMoc2Vzc2lvbklkKTtcblxuICAgIGlmICghaGFzR3VpZGUgJiYgIWhhc01lbWJlcikge1xuICAgICAgICByZXR1cm4gRVJST1I7XG4gICAgfVxuICAgIGlmIChoYXNHdWlkZSAmJiAhaGFzTWVtYmVyKSB7XG4gICAgICAgIHJldHVybiBOT19NRU1CRVI7XG4gICAgfVxuICAgIGlmIChoYXNNZW1iZXIgJiYgIWhhc0d1aWRlKSB7XG4gICAgICAgIHJldHVybiBOT19HVUlERTtcbiAgICB9XG5cbiAgICBjb25zdCBndWlkZVNvY2tldElkID0gc2Vzc2lvbkd1aWRlcy5nZXQoc2Vzc2lvbklkKS5zb2NrZXRJZDtcbiAgICBjb25zdCBtZW1iZXJTb2NrZXRJZCA9IHNlc3Npb25NZW1iZXJzLmdldChzZXNzaW9uSWQpLnNvY2tldElkO1xuXG4gICAgcmV0dXJuIHsgc3RhdHVzOiAnb2snLCByZWFzb246IFwiUmVhZHlcIiwgZ3VpZGVTb2NrZXRJZDogZ3VpZGVTb2NrZXRJZCwgbWVtYmVyU29ja2V0SWQ6IG1lbWJlclNvY2tldElkIH07XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "liveSessions.js"
      ],
      "names": [
        "sessionGuides",
        "Map",
        "sessionMembers",
        "ERROR",
        "status",
        "reason",
        "NO_MEMBER",
        "NO_GUIDE",
        "GUIDE",
        "COACH",
        "exports",
        "joinSession",
        "sessionData",
        "socketId",
        "sessionId",
        "role",
        "set",
        "buildAdvice",
        "hasGuide",
        "has",
        "hasMember",
        "guideSocketId",
        "get",
        "memberSocketId"
      ],
      "mappings": ";;;;;;;;AAEA,IAAMA,aAAa,GAAG,IAAIC,GAAJ,EAAtB;AACA,IAAMC,cAAc,GAAG,IAAID,GAAJ,EAAvB;AAEA,IAAME,KAAK,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,MAAM,EAAE;AAAxB,CAAd;AACA,IAAMC,SAAS,GAAG;AAAEF,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,MAAM,EAAE;AAAxB,CAAlB;AACA,IAAME,QAAQ,GAAG;AAAEH,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,MAAM,EAAE;AAAxB,CAAjB;AACA,IAAMG,KAAK,GAAG,OAAd;AACA,IAAMC,KAAK,GAAG,OAAd;AAEA;;;;;;;;;;;AAUAC,OAAO,CAACC,WAAR,GAAsB,UAACC,WAAD,EAAcC,QAAd,EAA2B;AAC7C,MAAMC,SAAS,GAAGF,WAAW,CAACE,SAA9B;AACA,MAAMC,IAAI,GAAGH,WAAW,CAACG,IAAzB;;AAEA,MAAIA,IAAI,KAAKP,KAAT,IAAkBO,IAAI,KAAKN,KAA/B,EAAsC;AAClCT,IAAAA,aAAa,CAACgB,GAAd,CAAkBF,SAAlB,kCAAkCF,WAAlC;AAA+CC,MAAAA,QAAQ,EAAEA;AAAzD;AACH,GAFD,MAGK;AACDX,IAAAA,cAAc,CAACc,GAAf,CAAmBF,SAAnB,kCAAmCF,WAAnC;AAAgDC,MAAAA,QAAQ,EAAEA;AAA1D;AACH;;AAED,SAAOI,WAAW,CAACH,SAAD,CAAlB;AACH,CAZD;AAeA;;;;;;;AAKA,SAASG,WAAT,CAAqBH,SAArB,EAAgC;AAC5B,MAAMI,QAAQ,GAAGlB,aAAa,CAACmB,GAAd,CAAkBL,SAAlB,CAAjB;AACA,MAAMM,SAAS,GAAGlB,cAAc,CAACiB,GAAf,CAAmBL,SAAnB,CAAlB;;AAEA,MAAI,CAACI,QAAD,IAAa,CAACE,SAAlB,EAA6B;AACzB,WAAOjB,KAAP;AACH;;AACD,MAAIe,QAAQ,IAAI,CAACE,SAAjB,EAA4B;AACxB,WAAOd,SAAP;AACH;;AACD,MAAIc,SAAS,IAAI,CAACF,QAAlB,EAA4B;AACxB,WAAOX,QAAP;AACH;;AAED,MAAMc,aAAa,GAAGrB,aAAa,CAACsB,GAAd,CAAkBR,SAAlB,EAA6BD,QAAnD;AACA,MAAMU,cAAc,GAAGrB,cAAc,CAACoB,GAAf,CAAmBR,SAAnB,EAA8BD,QAArD;AAEA,SAAO;AAAET,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,MAAM,EAAE,OAAxB;AAAiCgB,IAAAA,aAAa,EAAEA,aAAhD;AAA+DE,IAAAA,cAAc,EAAEA;AAA/E,GAAP;AACH",
      "sourceRoot": "/Users/harinimaniam/workspace/ferex/src/lib/",
      "sourcesContent": [
        "\n\nconst sessionGuides = new Map();\nconst sessionMembers = new Map();\n\nconst ERROR = { status: 'no', reason: \"Neither Guide nor Member has joined\" };\nconst NO_MEMBER = { status: 'no', reason: \"Awaiting Member\" };\nconst NO_GUIDE = { status: 'no', reason: \"Awaiting Guide\" };\nconst GUIDE = \"guide\";\nconst COACH = \"coach\";\n\n/**\n * The Session Data should contain the \n * sessionId,\n * user fuzzyId and \n * Role of the user who just joined the session\n * \n * \n * @param {*} sessionData \n * @param {*} socketId \n */\nexports.joinSession = (sessionData, socketId) => {\n    const sessionId = sessionData.sessionId;\n    const role = sessionData.role;\n\n    if (role === GUIDE || role === COACH) {\n        sessionGuides.set(sessionId, { ...sessionData, socketId: socketId });\n    }\n    else {\n        sessionMembers.set(sessionId, { ...sessionData, socketId: socketId });\n    }\n\n    return buildAdvice(sessionId);\n}\n\n\n/**\n * Return a suitable advice as a result for this join action,\n * which the socket client receivers may levarage to take action\n * \n */\nfunction buildAdvice(sessionId) {\n    const hasGuide = sessionGuides.has(sessionId);\n    const hasMember = sessionMembers.has(sessionId);\n\n    if (!hasGuide && !hasMember) {\n        return ERROR;\n    }\n    if (hasGuide && !hasMember) {\n        return NO_MEMBER;\n    }\n    if (hasMember && !hasGuide) {\n        return NO_GUIDE;\n    }\n\n    const guideSocketId = sessionGuides.get(sessionId).socketId;\n    const memberSocketId = sessionMembers.get(sessionId).socketId;\n\n    return { status: 'ok', reason: \"Ready\", guideSocketId: guideSocketId, memberSocketId: memberSocketId };\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1592319214763
  }
}